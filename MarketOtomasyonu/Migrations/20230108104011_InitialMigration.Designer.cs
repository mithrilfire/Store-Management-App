// <auto-generated />
using System;
using MarketOtomasyonu.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketOtomasyonu.Migrations
{
    [DbContext(typeof(MarketDBContext))]
    [Migration("20230108104011_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketOtomasyonu.Models.Musteri", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriId"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriId");

                    b.ToTable("musteriler");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelId");

                    b.ToTable("personeller");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Satis", b =>
                {
                    b.Property<int>("SatisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SatisId"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("Barkod")
                        .HasColumnType("int");

                    b.Property<string>("Tarih")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tutar")
                        .HasColumnType("real");

                    b.Property<int?>("VeresiyeId")
                        .HasColumnType("int");

                    b.HasKey("SatisId");

                    b.ToTable("satislar");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Stok", b =>
                {
                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("IrsaliyeId")
                        .HasColumnType("int");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<float>("GirdiBirimFiyati")
                        .HasColumnType("real");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("UrunId", "IrsaliyeId");

                    b.HasIndex("TedarikciId");

                    b.ToTable("stoklar");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Tedarikci", b =>
                {
                    b.Property<int>("TedarikciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TedarikciId"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TedarikciId");

                    b.ToTable("tedarikciler");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.TedarikciBorc", b =>
                {
                    b.Property<int>("TedarikciBorcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TedarikciBorcId"));

                    b.Property<float>("BorcTutari")
                        .HasColumnType("real");

                    b.Property<int>("IrsaliyeNo")
                        .HasColumnType("int");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("TedarikciBorcId");

                    b.HasIndex("TedarikciId");

                    b.ToTable("tedarikciBorclar");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.TedarikciOdeme", b =>
                {
                    b.Property<int>("TedarikciOdemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TedarikciOdemeId"));

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TedarikciBorcId")
                        .HasColumnType("int");

                    b.Property<float>("Tutar")
                        .HasColumnType("real");

                    b.HasKey("TedarikciOdemeId");

                    b.HasIndex("TedarikciBorcId");

                    b.ToTable("tedarikciOdemeler");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Barkod")
                        .HasColumnType("int");

                    b.Property<float>("BirimFiyati")
                        .HasColumnType("real");

                    b.HasKey("UrunId");

                    b.ToTable("urunler");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Veresiye", b =>
                {
                    b.Property<int>("VeresiyeId")
                        .HasColumnType("int");

                    b.Property<float>("KalanBorc")
                        .HasColumnType("real");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("SatisId")
                        .HasColumnType("int");

                    b.HasKey("VeresiyeId");

                    b.HasIndex("MusteriId");

                    b.ToTable("veresiyeler");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.VeresiyeOdeme", b =>
                {
                    b.Property<int>("VeresiyeOdemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VeresiyeOdemeId"));

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<float>("Tutar")
                        .HasColumnType("real");

                    b.Property<int>("VeresiyeId")
                        .HasColumnType("int");

                    b.HasKey("VeresiyeOdemeId");

                    b.HasIndex("VeresiyeId");

                    b.ToTable("veresiyeOdemeler");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Stok", b =>
                {
                    b.HasOne("MarketOtomasyonu.Models.Tedarikci", "Tedarikci")
                        .WithMany("Stoks")
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.TedarikciBorc", b =>
                {
                    b.HasOne("MarketOtomasyonu.Models.Tedarikci", "Tedarikci")
                        .WithMany("tedarikciBorcs")
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.TedarikciOdeme", b =>
                {
                    b.HasOne("MarketOtomasyonu.Models.TedarikciBorc", "TedarikciBorc")
                        .WithMany("TedarikciOdemes")
                        .HasForeignKey("TedarikciBorcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TedarikciBorc");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Veresiye", b =>
                {
                    b.HasOne("MarketOtomasyonu.Models.Musteri", "Musteri")
                        .WithMany("Veresiyes")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketOtomasyonu.Models.Satis", "Satis")
                        .WithOne("Veresiye")
                        .HasForeignKey("MarketOtomasyonu.Models.Veresiye", "VeresiyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Satis");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.VeresiyeOdeme", b =>
                {
                    b.HasOne("MarketOtomasyonu.Models.Veresiye", "Veresiye")
                        .WithMany("VeresiyeOdemes")
                        .HasForeignKey("VeresiyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veresiye");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Musteri", b =>
                {
                    b.Navigation("Veresiyes");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Satis", b =>
                {
                    b.Navigation("Veresiye")
                        .IsRequired();
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Tedarikci", b =>
                {
                    b.Navigation("Stoks");

                    b.Navigation("tedarikciBorcs");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.TedarikciBorc", b =>
                {
                    b.Navigation("TedarikciOdemes");
                });

            modelBuilder.Entity("MarketOtomasyonu.Models.Veresiye", b =>
                {
                    b.Navigation("VeresiyeOdemes");
                });
#pragma warning restore 612, 618
        }
    }
}
